version: '3'

volumes:
{%- if cookiecutter.cloud_provider == 'None' %}
  django_media: {}
{%- endif %}
  postgres_data: {}
  postgres_data_backups: {}
  traefik: {}
{%- if cookiecutter.use_elasticsearch == 'y' %}
  elasticsearch_data: {}
{%- endif %}

services:
  django:{% if cookiecutter.use_celery == 'y' %} &django{% endif %}
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: {{ cookiecutter.project_slug }}_stg_django
    {%- if cookiecutter.cloud_provider == 'None' %}
    volumes:
      - django_media:/app/{{ cookiecutter.project_slug }}/media
    {%- endif %}
    depends_on:
      - postgres
      - redis
      {%- if cookiecutter.use_elasticsearch == 'y' %}
      - elasticsearch
      {%- endif %}
    env_file:
      - ./.envs/.stg/.django
      - ./.envs/.stg/.postgres
    command: /start
    restart: unless-stopped

  {%- if cookiecutter.cloud_provider == 'None' %}
  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: {{ cookiecutter.project_slug }}_stg_nginx
    depends_on:
      - django
    volumes:
      - django_media:/usr/share/nginx/media:ro
    restart: unless-stopped
  {%- endif %}

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{ cookiecutter.project_slug }}_stg_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data:Z
      - postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.stg/.postgres
    restart: unless-stopped

  traefik:
    build:
      context: .
      dockerfile: ./compose/stg/traefik/Dockerfile
    image: {{ cookiecutter.project_slug }}_stg_traefik
    depends_on:
      - django
    volumes:
      - traefik:/etc/traefik/acme
    ports:
      - '127.0.0.1:8202:80'
      {%- if cookiecutter.use_celery == 'y' %}
      - "0.0.0.0:5555:5555"
      {%- endif %}
    restart: unless-stopped

  redis:
    image: redis:5.0
    restart: unless-stopped
  {%- if cookiecutter.use_celery == 'y' %}

  celeryworker:
    <<: *django
    image: {{ cookiecutter.project_slug }}_stg_celeryworker
    command: /start-celeryworker
    restart: unless-stopped

  celerybeat:
    <<: *django
    image: {{ cookiecutter.project_slug }}_stg_celerybeat
    command: /start-celerybeat
    restart: unless-stopped

  flower:
    <<: *django
    image: {{ cookiecutter.project_slug }}_stg_flower
    command: /start-flower
    restart: unless-stopped

  {%- endif %}

  {% if cookiecutter.cloud_provider == 'AWS' %}
  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.stg/.django
    volumes:
        - postgres_data_backups:/backups:z
    restart: unless-stopped
  {%- endif %}
  {%- if cookiecutter.use_elasticsearch == 'y' %}

  elasticsearch:
    image: elasticsearch:7.5.1
    volumes:
        - elasticsearch_data:/usr/share/elasticsearch/data:z
    env_file:
      - ./.envs/.stg/.elasticsearch
    ports:
      - '127.0.0.1:9200:9200'
      - '127.0.0.1:9300:9300'
    restart: unless-stopped

  kibana:
    image: kibana:7.5.1
    depends_on:
      - elasticsearch
    env_file:
      - ./.envs/.stg/.kibana
    ports:
      - '5601:5601'
    restart: unless-stopped

  {%- endif %}
